formatVersion: 1
name: moad-public-cloud-git
version: 1
inputs:
  frontendcount:
    title: 'No. of Frontend Workloads:'
    description: Load Balancer will be deployed <br> if Frontend Workload count <br> is >= 2
    type: integer
    default: 1
    minimum: 1
    maximum: 3
  environment:
    type: string
    description: Target Environment
    title: Target Environment
    oneOf:
      - title: Amazon AWS
        const: env:aws-main
      - title: Microsoft Azure
        const: env:azure
      - title: Google Cloud
        const: env:gcp
  username:
    type: string
    description: The username you would like <br> to use for the installation.
    default: demouser
    title: System Admin Account Username
  password:
    type: string
    description: The password you would like <br> to use for the ocuser account.
    default: vRealiz3!
    title: OpenCart Admin Account Password
    pattern: '[a-z0-9A-Z@#$]+'
    encrypted: true
  stressThreads:
    type: string
    description: Number of user threads generated <br> to simulate traffic load on <br> shopping cart website.
    default: '25'
    title: Workload Threads
    minLength: 1
    maxLength: 3
    format: ''
    pattern: '[0-9]{1,3}'
  costCenter:
    type: string
    enum:
      - engineering
      - operations
    description: Select the appropiate Cost Center.
    default: engineering
    title: Cost Center
resources:
  Cloud_LoadBalancer_1:
    type: Cloud.LoadBalancer
    properties:
      name: oc-lb
      count: ${input.frontendcount >= 2 ? 1:0}
      routes:
        - protocol: HTTP
          port: '80'
          instanceProtocol: HTTP
          instancePort: '80'
      network: ${resource.Cloud_Network_1.id}
      instances: ${resource.frontend[*].id}
      internetFacing: true
  frontend:
    type: Cloud.Machine
    dependsOn:
      - mysql
    properties:
      agent: ${input.environment == "env:aws-main" ? "cloudWatch" :""}
      name: oc-web
      flavor: medium
      count: ${input.frontendcount}
      image: moad
      tags:
        - key: project
          value: ${env.projectName}
        - key: cost_center
          value: ${input.costCenter}
        - key: application
          value: moad
      networks:
        - network: ${resource.Cloud_Network_1.id}
      cloudConfig: |
        repo_update: true
        repo_upgrade: all
        apt_source:
          - source: deb http://archive.ubuntu.com/ubuntu main universe multiverse restricted

        packages:
          - apache2
          - php
          - php-mysql
          - libapache2-mod-php
          - php-cli
          - php-common
          - php-intl
          - php-gd
          - php-mbstring
          - php-xml
          - php-zip
          - php-curl
          - php-xmlrpc
          - mysql-server-5.7
          - unzip
          - open-vm-tools

        users:
          - name: ${input.username}
            sudo: ['ALL=(ALL) NOPASSWD:ALL']
            groups: sudo
            shell: /bin/bash
          - name: ocuser
            sudo: ['ALL=(ALL) NOPASSWD:ALL']
            groups: sudo
            shell: /bin/bash

        write_files:
          - path: /etc/hosts
            content: 127.0.0.1 ${self.resourceName}
            append: true

        runcmd:
          - systemctl restart apache2
          - USER=ocuser
          - PASS=${input.password}
          - echo $USER:$PASS | /usr/sbin/chpasswd
          - echo ${input.username}:$PASS | /usr/sbin/chpasswd
          - sed -i "s/PasswordAuthentication no/PasswordAuthentication yes/g" /etc/ssh/sshd_config
          - service ssh reload
          - hostnamectl set-hostname ${self.resourceName}
          - git clone https://github.com/mcclanc/opencart-demo.git /tmp/opencart
          - mv /tmp/opencart /var/www/
          - chown -R www-data.www-data /var/www/opencart
          - chmod -R 775 /var/www/opencart
          - tee /etc/apache2/sites-available/opencart.conf > /dev/null << EOF
          - <VirtualHost *:80>
          -   ServerName www.opencart.cmbu.local
          -   DocumentRoot /var/www/opencart
          -   <Directory /var/www/opencart/>
          -     AllowOverride All
          -     allow from all
          -   </Directory>
          - </VirtualHost>
          - EOF
          - cd /etc/apache2/sites-available/
          - a2ensite opencart.conf
          - a2dissite 000-default.conf
          - systemctl reload apache2
          - systemctl restart apache2
          - echo "[client]" >> /etc/mysql/mysql.conf.d/mysqld.cnf
          - echo "user=ocuser" >> /etc/mysql/mysql.conf.d/mysqld.cnf
          - echo "password=$PASS" >> /etc/mysql/mysql.conf.d/mysqld.cnf

            #----------------------- Set Website IP Address -----------------------#
          - export cloudip=$(curl http://checkip.amazonaws.com/)
          - export onpremip=$(ip route get 8.8.8.8 | awk -F"src " 'NR==1{split($2,a," ");print a[1]}')
          - mysqlip=${resource.mysql.networks[0].address}
          - export ip4=${input.environment == "env:aws-main" || input.environment == "env:azure" || input.environment == "env:gcp" ? "$cloudip": "$onpremip"}
            #----------------------------------------------------------------------#
          
          - mysql -u $USER -h $mysqlip -e 'source /var/www/opencart/install/opencart.sql'
          - mysql -u $USER -h $mysqlip -e "INSERT INTO oc_user (user_id,user_group_id,username,password,salt,firstname,lastname,email,image,code,ip,status,date_added) VALUES (1,1,'admin','5feaa046f6927df3d744007ec1491dba838f672e','c4wnfrq9J','demo','user','admin@admin.com','none','none','none',1,'2019-01-31 06:29:09')" opencart
          - sed -i "s/frontendiphere/$ip4/g" /var/www/opencart/config.php
          - sed -i "s/dbiphere/$mysqlip/g" /var/www/opencart/config.php
          - sed -i "s/usernamehere/$USER/g" /var/www/opencart/config.php
          - sed -i "s/passwordhere/$PASS/g" /var/www/opencart/config.php
          - sed -i "s/frontendiphere/$ip4/g" /var/www/opencart/admin/config.php
          - sed -i "s/dbiphere/$mysqlip/g" /var/www/opencart/admin/config.php
          - sed -i "s/usernamehere/$USER/g" /var/www/opencart/admin/config.php
          - sed -i "s/passwordhere/$PASS/g" /var/www/opencart/admin/config.php
          - systemctl reload apache2
          - systemctl restart apache2
          
            #----------------------- Install vRLIC Agent  -------------------------#
          - cd /tmp
          - wget https://ci-data-collector.s3.amazonaws.com/VMware-LI-Agent-8-0-0-14743436/vmware-log-insight-agent_8.0.0-14743436_all.deb
          - dpkg -i vmware-log-insight-agent_8.0.0-14743436_all.deb
          - export cpip=${input.environment == "env:aws-main" ? "3.101.74.51" : input.environment == "env:azure" ? "20.25.27.151" : input.environment == "env:gcp" ? "34.70.184.142" : "LOGINSIGHT"}
          - sed -i "s/;hostname=LOGINSIGHT/hostname=$cpip/g" /var/lib/loginsight-agent/liagent.ini
          - sed -i "s/;ssl=yes/ssl=no/g" /var/lib/loginsight-agent/liagent.ini
          - systemctl restart liagentd

            #------------------------Install CloudWatch Agent for AWS--------------#
          - export myEnv=${input.environment}
          - if [ "$myEnv" = "env:aws-main" ]; 
          - then 
          -    cd /tmp
          -    wget https://s3.amazonaws.com/amazoncloudwatch-agent/ubuntu/amd64/latest/amazon-cloudwatch-agent.deb
          -    dpkg -i -E ./amazon-cloudwatch-agent.deb
          -    wget https://cmbutmmcwagent.s3-us-west-1.amazonaws.com/config.json --directory-prefix=/opt/aws/amazon-cloudwatch-agent/bin
          -    amazon-cloudwatch-agent-ctl -a start
          - fi  
            
            #----------------------------------------------------------------------#

          - echo "ocuser ALL=(ALL) NOPASSWD:ALL" >> /etc/sudoers
          - echo 'Cloud-init is done!' >> /tmp/finished.txt
      constraints:
        - tag: ${input.environment}
  mysql:
    type: Cloud.Machine
    properties:
      agent: ${input.environment == "env:aws-main" ? "cloudWatch" :""}
      name: oc-db
      flavor: Small
      image: moad
      tags:
        - key: project
          value: ${env.projectName}
        - key: cost_center
          value: ${input.costCenter}
        - key: application
          value: moad
      networks:
        - network: ${resource.Cloud_Network_1.id}
      cloudConfig: |
        repo_update: true
        repo_upgrade: all
        apt_source:
          - source: deb http://archive.ubuntu.com/ubuntu main universe multiverse restricted

        packages:
          - mysql-server-5.7
          - mysql-client
          - unzip
          - open-vm-tools

        users:
          - name: ${input.username}
            sudo: ['ALL=(ALL) NOPASSWD:ALL']
            groups: sudo
            shell: /bin/bash
          - name: ocuser
            sudo: ['ALL=(ALL) NOPASSWD:ALL']
            groups: sudo
            shell: /bin/bash

        write_files:
          - path: /etc/cron.hourly/oc_cleanup
            owner: root
            permissions: '0777'
            content: "mysql -u ocuser -D opencart -e 'delete from oc_session where oc_session.expire < DATE_SUB(NOW(), INTERVAL 360 DAY);'"
          - path: /etc/cron.daily/mysqlslowlogs
            owner: root
            permissions: '0666'
            content: |
              /var/lib/mysql/mysql-slow.log {
                 size 1G
                 dateext
                 compress
                 missingok
                 rotate 2
                 notifempty
                 delaycompress
                 sharedscripts
                 nocopytruncate
                 create 660 mysql mysql
                 postrotate
                 /usr/bin/mysql -e 'select @@global.slow_query_log into @sq_log_save; set global slow_query_log=off; select sleep(5); FLUSH SLOW LOGS; select sleep(10); set global slow_query_log=@sq_log_save;'
                 endscript
                 rotate 150
              }
          - path: /etc/hosts
            content: 127.0.0.1 ${self.name}
            append: true

        runcmd:
          - export DEBIAN_FRONTEND=noninteractive
          - USER=ocuser
          - PASS=${input.password}
          - echo $USER:$PASS | /usr/sbin/chpasswd
          - echo ${input.username}:$PASS | /usr/sbin/chpasswd
          - sed -i "s/PasswordAuthentication no/PasswordAuthentication yes/g" /etc/ssh/sshd_config
          - service ssh reload
          - hostnamectl set-hostname ${self.resourceName}
          - echo "mysql-server-5.7 mysql-server/root_password password root" | sudo debconf-set-selections
          - echo "mysql-server-5.7 mysql-server/root_password_again password root" | sudo debconf-set-selections
          - echo "[client]" >> /etc/mysql/mysql.conf.d/mysqld.cnf
          - echo "user=root" >> /etc/mysql/mysql.conf.d/mysqld.cnf
          - echo "password=root" >> /etc/mysql/mysql.conf.d/mysqld.cnf
          - echo "user=ocuser" >> /etc/mysql/mysql.conf.d/mysqld.cnf
          - echo "password=$PASS" >> /etc/mysql/mysql.conf.d/mysqld.cnf
          - sed -i 's/#slow/slow/g' /etc/mysql/mysql.conf.d/mysqld.cnf
          - sed -i 's/#long_query_time/long_query_time/g' /etc/mysql/mysql.conf.d/mysqld.cnf
          - sed -i 's/bind-address/#bind-address/g' /etc/mysql/mysql.conf.d/mysqld.cnf
          - systemctl restart mysql
          - mysql -u root -e "GRANT ALL ON *.* TO '$USER'@'%' IDENTIFIED BY '$PASS'"
          - mysql -u root -e 'CREATE DATABASE opencart'
          - mysql -u root -e 'USE opencart'
          - mysql -u root -e 'flush privileges'
          
            #----------------------- Install vRLIC Agent  -------------------------#
          - cd /tmp
          - wget https://ci-data-collector.s3.amazonaws.com/VMware-LI-Agent-8-0-0-14743436/vmware-log-insight-agent_8.0.0-14743436_all.deb
          - dpkg -i vmware-log-insight-agent_8.0.0-14743436_all.deb
          - export cpip=${input.environment == "env:aws-main" ? "3.101.74.51" : input.environment == "env:azure" ? "20.25.27.151" : input.environment == "env:gcp" ? "34.70.184.142" : "LOGINSIGHT"}
          - sed -i "s/;hostname=LOGINSIGHT/hostname=$cpip/g" /var/lib/loginsight-agent/liagent.ini
          - sed -i "s/;ssl=yes/ssl=no/g" /var/lib/loginsight-agent/liagent.ini
          - systemctl restart liagentd

            #------------------------Install CloudWatch Agent for AWS--------------#
          - export myEnv=${input.environment}
          - if [ "$myEnv" = "env:aws-main" ]; 
          - then 
          -    cd /tmp
          -    wget https://s3.amazonaws.com/amazoncloudwatch-agent/ubuntu/amd64/latest/amazon-cloudwatch-agent.deb
          -    dpkg -i -E ./amazon-cloudwatch-agent.deb
          -    wget https://cmbutmmcwagent.s3-us-west-1.amazonaws.com/config.json --directory-prefix=/opt/aws/amazon-cloudwatch-agent/bin
          -    amazon-cloudwatch-agent-ctl -a start
          - fi  
            
            #----------------------------------------------------------------------#

          - echo 'Cloud-init is done!' >> /tmp/finished.txt
      constraints:
        - tag: ${input.environment}
  loadGen:
    type: Cloud.Machine
    properties:
      name: oc-lg
      image: moad
      flavor: Large
      tags:
        - key: project
          value: ${env.projectName}
        - key: cost_center
          value: ${input.costCenter}
        - key: application
          value: moad
      cloudConfig: |
        users:
          - name: ${input.username}
            sudo: ['ALL=(ALL) NOPASSWD:ALL']
            groups: sudo
            shell: /bin/bash
          - name: ocuser
            sudo: ['ALL=(ALL) NOPASSWD:ALL']
            groups: sudo
            shell: /bin/bash
          - name: svcacct
            sudo: ['ALL=(ALL) NOPASSWD:ALL']
            groups: sudo
            shell: /bin/bash
            passwd: $iAuePVH.5tvGaDYf$bwDqfVz25TTYnZCGOWiPLAhczM.VJEmlEQizdOqnynfhZlaNERXkxBcJxtAJAOJuWn5gxftsyteU7cuQ9VV1/1
        write_files:
          - path: /etc/hosts
            content: 127.0.0.1 ${self.resourceName}
            append: true       
          - path: /etc/sudoers.d/sudo-me
            content: cas-demo ALL=(ALL) NOPASSWD:ALL

        packages:
            default-jre
        runcmd:
          - USER=ocuser
          - PASS=${input.password}
          - echo $USER:$PASS | /usr/sbin/chpasswd
          - export LOAD=${input.stressThreads}
          - export JAVA_HOME=
          - echo ${input.username}:$PASS | /usr/sbin/chpasswd
          - sed -i "s/PasswordAuthentication no/PasswordAuthentication yes/g" /etc/ssh/sshd_config
          - service ssh reload
          - hostnamectl set-hostname ${self.resourceName}
          
            #----------------------- Set LoadGen IP Address -----------------------#
          - export lbIP=${resource.Cloud_LoadBalancer_1.address[0]}
          - export frontendIP=${resource.frontend.networks[0].address[0]}
          - export ipAddress=${input.frontendcount >= 2 ? "$lbIP":"$frontendIP"}
            #----------------------------------------------------------------------#
            
          - sudo mkdir /usr/jmeter
          - cd /usr/jmeter
          - sudo wget https://cmbutmmcwagent.s3-us-west-1.amazonaws.com/apache-jmeter-5.2.1.tgz
          - sudo tar -xvzf apache-jmeter-5.2.1.tgz
          - cd apache-jmeter-5.2.1/bin/templates
          - sudo wget https://cmbutmmcwagent.s3-us-west-1.amazonaws.com/ImprovedShoppingCart.jmx
          - sudo sed -i "s/10.176.150.78/$ipAddress/g" /usr/jmeter/apache-jmeter-5.2.1/bin/templates/ImprovedShoppingCart.jmx
          - sudo sed -i "s/num_threads\">150/num_threads\">$LOAD/g" /usr/jmeter/apache-jmeter-5.2.1/bin/templates/ImprovedShoppingCart.jmx
          - sudo nohup /usr/jmeter/apache-jmeter-5.2.1/bin/jmeter -j /var/log/jmeter.log -n -t /usr/jmeter/apache-jmeter-5.2.1/bin/templates/ImprovedShoppingCart.jmx &
      constraints:
        - tag: ${input.environment}
      networks:
        - network: ${resource.Cloud_Network_1.id}
  Cloud_Network_1:
    type: Cloud.Network
    properties:
      name: oc-net
      networkType: existing
      constraints:
        - tag: ${input.environment}
